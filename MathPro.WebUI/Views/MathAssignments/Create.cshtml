@using MvcCheckBoxList.Model
@model MathPro.WebUI.Models.MathAssignmentViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MathAssignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.SectionId, "Раздел", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.mathAssignment.SectionId, new SelectList(Model.sections, "SectionId", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.mathAssignment.Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.ComplexityId, "Сложность", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.mathAssignment.ComplexityId, new SelectList(Model.complexities, "ComplexityId", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.mathAssignment.ComplexityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.AssignmentText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.mathAssignment.AssignmentText, new { id = "MathInput", cols = "60", rows = "10", onkeyup = "UpdateMathAssignment(this.value)", style = "margin-top:5px" })
                @Html.Raw("<br> <b> Preview: </b> <br>")
                <div id="box">
                    <div id="MathOutputAssignment" style="border:1px solid; padding: 3px; width:100%; height: 100%; margin-top:5px">$${}$$</div>
                </div>
                @Html.ValidationMessageFor(model => model.mathAssignment.AssignmentText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.PointsForAssignment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mathAssignment.PointsForAssignment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mathAssignment.PointsForAssignment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.mathAssignment.Answer, new { id = "MathInput", cols = "60", rows = "10", onkeyup = "UpdateMathAnswer(this.value)", style = "margin-top:5px" })
                @Html.Raw("<br> <b> Preview: </b> <br>")
                <div id="box">
                    <div id="MathOutputAnswer" style="border:1px solid; padding: 3px; width:100%; height: 100%; margin-top:5px">$${}$$</div>
                </div>
                @Html.ValidationMessageFor(model => model.mathAssignment.Answer, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.subsections, "Подразделы", htmlAttributes: new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                @using (Html.BeginForm("Create", "MathAssignments", FormMethod.Post))
                {
                    @Html.CheckBoxListFor(model => model.subsections.PostedSubsection.SubsectionIds,
                        model => model.subsections.AvailableSubsection,
                        subs => subs.SubsectionId,
                        subs => subs.Name,
                        model => model.subsections.SelectedSubsection, Position.Vertical)
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="../../Scripts/MathAssignmentPreview.js"></script>
}
