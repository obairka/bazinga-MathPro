@model MathPro.Domain.Entities.MathAssignmentSubsectionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MathAssignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.SectionId, "Раздел", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.mathAssignment.SectionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.ComplexityId, "Сложность", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ComplexityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.mathAssignment.ComplexityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.AssignmentText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mathAssignment.AssignmentText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mathAssignment.AssignmentText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.PointsForAssignment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mathAssignment.PointsForAssignment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mathAssignment.PointsForAssignment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mathAssignment.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mathAssignment.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mathAssignment.Answer, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.subsections, "Подразделы", htmlAttributes: new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                @foreach (var subs in Model.subsections)
                {
                    @Html.Label(subs.Name);
                    @Html.CheckBoxFor(s => subs.IsSelected);
                    //@Html.CheckBox("Subsection", new { value = subs.SubsectionId, @checked = false });
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
